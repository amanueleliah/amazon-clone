{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aman/Desktop/Amazon-clone/src/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CheckoutProduct from './CheckoutProduct';\nimport './Payment.css';\nimport { useStateValue } from './StateProvider';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport axios from './axios';\nimport { db } from './firebase';\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState('');\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    // generate the special stripe secret which allows us to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        // Stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n  console.log('THE SECRET IS >>>', clientSecret);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      // paymentIntent = payment confirmation\n      db.collection('users').doc(user === null || user === void 0 ? void 0 : user.uid).collection('orders').doc(paymentIntent.id).set({\n        basket: basket,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      dispatch({\n        type: 'EMPTY_BASKET'\n      });\n      history.replace('/orders');\n    });\n  };\n\n  const handleChange = event => {\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : '');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout (\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"123 React Lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Chicago, IL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment__priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Order Total: \", value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 42\n                }, this),\n                decimalScale: 2,\n                value: getBasketTotal(basket),\n                displayType: 'text',\n                thousandSeparator: true,\n                prefix: '$'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 39\n                  }, this) : 'Buy Now'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payment, \"1FSHQOZGmvdVcF53Xcbj4le5N4M=\", false, function () {\n  return [useStateValue, useHistory, useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/aman/Desktop/Amazon-clone/src/Payment.js"],"names":["React","useState","useEffect","Link","useHistory","CheckoutProduct","useStateValue","CardElement","useStripe","useElements","CurrencyFormat","axios","db","Payment","basket","user","dispatch","history","getBasketTotal","reduce","amount","item","price","stripe","elements","error","setError","disabled","setDisabled","succeeded","setSucceeded","processing","setProcessing","clientSecret","setClientSecret","getClientSecret","response","method","url","data","console","log","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","created","type","replace","handleChange","empty","message","length","email","map","title","image","rating","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CheckoutProduct from './CheckoutProduct';\nimport './Payment.css';\nimport { useStateValue } from './StateProvider';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport axios from './axios';\nimport { db } from './firebase';\n\nfunction Payment() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  const history = useHistory();\n\n  const getBasketTotal = (basket) =>\n    basket?.reduce((amount, item) => item.price + amount, 0);\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState('');\n\n  const [clientSecret, setClientSecret] = useState(true);\n\n  useEffect(() => {\n    // generate the special stripe secret which allows us to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        // Stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n\n  console.log('THE SECRET IS >>>', clientSecret);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setProcessing(true);\n\n    const payload = await stripe\n      .confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n        },\n      })\n      .then(({ paymentIntent }) => {\n        // paymentIntent = payment confirmation\n\n        db.collection('users')\n          .doc(user?.uid)\n          .collection('orders')\n          .doc(paymentIntent.id)\n          .set({\n            basket: basket,\n            amount: paymentIntent.amount,\n            created: paymentIntent.created,\n          });\n\n        setSucceeded(true);\n        setError(null);\n        setProcessing(false);\n\n        dispatch({\n          type: 'EMPTY_BASKET',\n        });\n\n        history.replace('/orders');\n      });\n  };\n\n  const handleChange = (event) => {\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : '');\n  };\n\n  return (\n    <div className=\"payment\">\n      <div className=\"payment__container\">\n        <h1>\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\n        </h1>\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Delivery Address</h3>\n          </div>\n          <div className=\"payment__address\">\n            <p>{user?.email}</p>\n            <p>123 React Lane</p>\n            <p>Chicago, IL</p>\n          </div>\n        </div>\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Review items and delivery</h3>\n          </div>\n          <div className=\"payment__items\">\n            {basket.map((item) => (\n              <CheckoutProduct\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                price={item.price}\n                rating={item.rating}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Payment Method</h3>\n          </div>\n          <div className=\"payment__details\">\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n              <div className=\"payment__priceContainer\">\n                <CurrencyFormat\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\n                  decimalScale={2}\n                  value={getBasketTotal(basket)}\n                  displayType={'text'}\n                  thousandSeparator={true}\n                  prefix={'$'}\n                />\n                <button disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : 'Buy Now'}</span>\n                </button>\n              </div>\n              {error && <div>{error}</div>}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}